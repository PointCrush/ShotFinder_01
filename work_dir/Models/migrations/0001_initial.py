# Generated by Django 3.2.16 on 2023-03-23 10:38

import Models.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AlbumModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(default='Альбом', max_length=255)),
                ('time_create', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Model',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=250, null=True, verbose_name='Город')),
                ('age', models.PositiveSmallIntegerField(verbose_name='Возраст')),
                ('gender', models.CharField(choices=[('M', 'Мужской'), ('F', 'Женский'), ('O', 'Другое')], default='M', max_length=1, verbose_name='Пол')),
                ('height', models.PositiveSmallIntegerField(verbose_name='Рост')),
                ('weight', models.PositiveSmallIntegerField(verbose_name='Вес')),
                ('bust', models.PositiveSmallIntegerField(blank=True, verbose_name='Обхват груди')),
                ('waist', models.PositiveSmallIntegerField(blank=True, verbose_name='Обхват талии')),
                ('hips', models.PositiveSmallIntegerField(blank=True, verbose_name='Обхват бедер')),
                ('shoe_size', models.PositiveSmallIntegerField(blank=True, verbose_name='Размер ноги')),
                ('clothing_size', models.CharField(choices=[('XXS', 'XXS'), ('XS', 'XS'), ('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL'), ('XXL', 'XXL'), ('XXXL', 'XXXL')], default='M', max_length=4, verbose_name='Размер одежды')),
                ('hair_color', models.CharField(max_length=30, verbose_name='Цвет волос')),
                ('eye_color', models.CharField(max_length=30, verbose_name='Цвет глаз')),
                ('tattoo', models.BooleanField(default=True, verbose_name='Наличие тату')),
                ('tattoo_description', models.CharField(blank=True, max_length=200, verbose_name='Если имеются тату, то на каких местах')),
                ('in_under_photos', models.BooleanField(default=False, verbose_name='Согласие на фото в нижнем белье/купальнике')),
                ('nu_photos', models.BooleanField(default=False, verbose_name='Согласие на ню-фото (18+)')),
                ('tfp_photos', models.BooleanField(default=False, null=True, verbose_name='Сотрудничество по ТФП')),
                ('avatar', models.ImageField(blank=True, upload_to='avatar/model/%Y/%m/%d/', verbose_name='Фото профиля')),
                ('time_create', models.DateTimeField(auto_now_add=True)),
                ('time_update', models.DateTimeField(auto_now=True)),
                ('is_published', models.BooleanField(default=True, verbose_name='Опубликовать')),
                ('inst', models.CharField(max_length=50, null=True)),
                ('vk', models.CharField(max_length=250, null=True)),
                ('tg', models.CharField(max_length=50, null=True)),
                ('like', models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL)),
                ('owner', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='owner_model', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ImageModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to=Models.models.user_directory_path)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('album', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='Models.albummodel')),
                ('model', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='Models.model')),
            ],
        ),
        migrations.CreateModel(
            name='CommentModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=50, null=True)),
                ('text', models.TextField(null=True)),
                ('created_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('author', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='Models.model')),
            ],
        ),
        migrations.AddField(
            model_name='albummodel',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Models.model'),
        ),
    ]
